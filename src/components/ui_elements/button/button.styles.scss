// import scss variables from camp-css package
@import '~camp-css/scss/variables/_colors.scss';
// import my scss variables
@import '../../../shared/variables.scss';

/*
    Button component styles
    @component: ./Buttons.js
*/

.button {
    // default styles
    cursor: pointer;
    display: inline-block;
    box-sizing: border-box;
    @include normal;
    color: #ffffff;
    text-decoration: none;
    background-color: $slate;
    border: 1px solid $slate;

    /*
        hover styles if not disabled
        @prop
        noHover: bool
    */
    &:not(.noHover):hover:enabled {
        background-color: darken($slate, 10%);
        border: 1px solid darken($slate, 10%);
    }

    /*
        animation styles if not disabled
        @prop
        noAnimation: bool
    */
    &:not(.noAnimation) {
        will-change: background-color;
        transition: background-color 0.3s;
    }

    /*
        shadow styles
        @prop
        shadow: 'inset' || 'outset' || 'both'
    */
    &.shadow {
        &.inset {
            box-shadow: $shadow-inset;
        }

        &.outset {
            box-shadow: $shadow;
        }

        &.both {
            box-shadow: $shadow, $shadow-inset;
        }
    }

    /*
        round corners styles
        @prop
        round: bool
    */
    &.round {
        border-radius: $border-radius;
    }

    /*
        color variants
        @prop
        colorVariant: number
    */
    @each $color-name, $color-value in $default-colors {
        &.#{$color-name} {
            background-color: #{$color-value};
            border: 1px solid #{$color-value};

            &:not(.noHover):hover:enabled {
                background-color: darken($color-value, 10%);
                border: 1px solid darken($color-value, 10%);
            }
        }
    }

    /*
        primary color styles
        @prop
        primary: bool
    */
    &.primary {
        @include generate-main-color($ocean, $primary-colors);
    }

    /*
        secondary color styles
        @prop
        secondary: bool
    */
    &.secondary {
        @include generate-main-color($mint, $secondary-colors);
    }

    /*
        icon styles
        @prop
        icon: bool
    */
    .icon {
        display: inline-block;
        overflow: visible;
        width: 1em;
        height: 0.75em;
        margin: 0 5px 0 0;
        vertical-align: -0.08em;
        font-size: inherit;
    }

    // disabled styles
    &:disabled {
        cursor: not-allowed;
        background-color: #afafaf;
        border: 1px solid #afafaf;
    }

    /*
        size styles
        @prop
        size: 'small' || 'large'
    */
    &.small {
        @include small;
    }

    &.large {
        @include large;
    }
}
