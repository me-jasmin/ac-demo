// import scss variables from camp-css package
@import '~camp-css/scss/variables/_colors.scss';

// color arrays from scss/variables/_colors.scss

$default-colors: (
    v-120: $slate-120,
    v-80: $slate-80,
    v-60: $slate-60,
    v-40: $slate-40,
    v-20: $slate-20,
);

$primary-colors: (
    v-120: $ocean-120,
    v-80: $ocean-80,
    v-60: $ocean-60,
    v-40: $ocean-40,
    v-20: $ocean-20,
);

$secondary-colors: (
    v-120: $mint-120,
    v-80: $mint-80,
    v-60: $mint-60,
    v-40: $mint-40,
    v-20: $mint-20,
);

/*
    Button component styles
    @component: ./Buttons.js
*/

.button {
    // default styles
    padding: 10px 20px;
    font-size: 16px;
    color: #ffffff;
    text-decoration: none;
    box-sizing: border-box;
    display: inline-block;
    background-color: $slate;

    /*
        hover styles if not disabled
        @prop
        noHover: bool
    */
    &:not(.noHover):hover {
        background-color: darken($slate, 10%);
    }

    /*
        animation styles if not disabled
        @prop
        noAnimation: bool
    */
    &:not(.noAnimation) {
        will-change: background-color;
        transition: background-color 0.3s;
    }

    /*
        shadow styles
        @prop
        shadow: 'inset' || 'outset' || 'both'
    */
    &.shadow {
        &.inset {
            box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.5);
        }

        &.outset {
            box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.5);
        }

        &.both {
            box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.5), inset 0 0 5px 0 rgba(0, 0, 0, 0.5);
        }
    }

    /*
        round corners styles
        @prop
        round: bool
    */
    &.round {
        border-radius: 10px;
    }

    /*
        color variants
        @prop
        colorVariant: number
    */
    @each $color-name, $color-value in $default-colors {
        &.#{$color-name} {
            background-color: #{$color-value};

            &:hover {
                background-color: darken($color-value, 10%);
            }
        }
    }

    /*
        primary color styles
        @prop
        primary: bool
    */
    &.primary {
        background-color: $ocean;

        &:hover {
            background-color: darken($ocean, 10%);
        }

        @each $color-name, $color-value in $primary-colors {
            &.#{$color-name} {
                background-color: #{$color-value};

                &:hover {
                    background-color: darken($color-value, 10%);
                }
            }
        }
    }

    /*
        secondary color styles
        @prop
        secondary: bool
    */
    &.secondary {
        background-color: $mint;

        &:hover {
            background-color: darken($mint, 10%);
        }

        @each $color-name, $color-value in $secondary-colors {
            &.#{$color-name} {
                background-color: #{$color-value};

                &:hover {
                    background-color: darken($color-value, 10%);
                }
            }
        }
    }

    /*
        icon styles
        @prop
        icon: bool
    */
    .icon {
        display: inline-block;
        overflow: visible;
        width: 1em;
        height: 0.75em;
        margin: 0 5px 0 0;
        vertical-align: -0.08em;
        font-size: inherit;
    }

    /*
        size styles
        @prop
        size: 'small' || 'large'
    */
    &.small {
        padding: 5px 15px;
        font-size: 12px;
    }

    &.large {
        padding: 15px 25px;
        font-size: 18px;
    }
}
